{"version":3,"sources":["hooks/useStyles.js","assets/kiekkonalle.png","assets/nalleEvil.png","components/TextField.jsx","components/LoginForm.jsx","components/FrontPage.jsx","services/gamesList.js","hooks/useGetGames.js","components/GameList.jsx","components/LineChart.jsx","components/BarCharts.jsx","services/handicapList.js","hooks/useGetHcList.js","components/HandicapList.jsx","components/Kilpataulukko.jsx","components/NaviNappi.jsx","components/Navipalkki.jsx","components/UploadCsv.jsx","hooks/useIsLoggedIn.js","App.js","index.js"],"names":["useStyles","createStyles","container","margin","login","borderRadius","borderWidth","padding","alignItems","marginTop","maxWidth","textfield","marginBottom","navButton","color","fontSize","TextField","props","tyylit","style","variant","LoginForm","handleLogin","useState","username","setUsername","password","setPassword","placeholder","name","value","onChange","e","target","Button","onClick","FrontPage","logged","wrongPassword","setWrongPassword","a","axios","post","token","console","log","setToken","data","Container","Paper","elevation","Typography","Grid","direction","justifyContent","item","xs","src","nalleEvil","nalle","alt","width","clearToken","gamesList","window","localStorage","getItem","get","headers","Authorization","res","message","useGetGames","games","setGames","useEffect","SingleGame","game","showChart","setShowChart","showProgress","setShowProgress","Card","CardHeader","title","course","subheader","layout","date","action","CardContent","Switch","checked","TableContainer","Table","size","className","TableHead","TableRow","TableCell","players","score","reduce","p","c","i","TableBody","map","player","rataPar","pars","Collapse","in","unmountOnExit","createChartData","maxHeight","argumentField","valueField","position","SinglePlayer","tulosVari","tulos","vayla","summa","s","backgroundColor","total","plusminus","totalHC","rankHC","pp","cc","ii","Rata","Number","GameList","filter","setFilter","gutterBottom","fg","toLowerCase","includes","reverse","g","Backdrop","open","CircularProgress","LineChart","BarChart","factory","scaleBand","text","handicapList","useGetHcList","hcList","setHcList","rata","rataAuki","setRataAuki","component","IconButton","InsertChartOutlined","sort","b","pelaaja","nimi","keskiarvo","average","mediaani","median","hc","Pelaaja","lastRounds","pelaajaAuki","setPelaajaAuki","Math","round","JSON","stringify","slice","replace","paddingBottom","paddingTop","border","colSpan","v","index","HandicapList","r","pisteet","Kilpataulukko","pelaajaRivit","setPelaajaRivit","dataToShow","setDataToShow","pelit","pelaajat","peli","pelaajaObj","find","x","points","id","push","_id","columns","headerName","field","description","unshift","rows","copyR","Object","keys","key","Select","MenuItem","Divider","disableColumnMenu","autoHeight","pageSize","NaviNappi","to","children","historia","useHistory","Navipalkki","opacity","barOpacity","setBarOpacity","addEventListener","newOpa","scrollY","visibility","AppBar","Toolbar","flex","flexDirection","UploadStats","stats","uusia","duplikaatteja","wrongDate","wrongName","count","names","UploadCsv","uploading","setUploading","uploadResponse","setUploadResponse","paragraph","onSubmit","preventDefault","FormData","append","filu","files","then","catch","finally","type","useIsLggedIn","setLogged","setItem","clear","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90385828.chunk.js","sourcesContent":["import { createStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = () => {\r\n    const tyylit = createStyles({\r\n        container: {\r\n            margin: 'auto',\r\n        },\r\n        login: {\r\n            borderRadius: 15,\r\n            borderWidth: 3,\r\n            padding: 20,\r\n            alignItems: 'center',\r\n            margin: 'auto',\r\n            marginTop: '20%',\r\n            maxWidth: '500px'\r\n        },\r\n        textfield: {\r\n            marginBottom: 10,\r\n        },\r\n        navButton: {\r\n            color: 'lightgray',\r\n            fontSize: '3vw',\r\n            padding: '1vh'\r\n            \r\n        },\r\n    })\r\n    return tyylit;\r\n}\r\nexport default useStyles;","export default __webpack_public_path__ + \"static/media/kiekkonalle.f1098de8.png\";","export default __webpack_public_path__ + \"static/media/nalleEvil.c4c04d00.png\";","import { TextField as OriginalTextField } from \"@material-ui/core\"\r\nimport useStyles from \"../hooks/useStyles\"\r\nconst TextField = (props) => {\r\n    const tyylit = useStyles();\r\n    return (\r\n        <OriginalTextField style={tyylit.textfield} {...props} variant=\"outlined\" />\r\n    )\r\n}\r\nexport default TextField;","import { Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport TextField from \"./TextField\";\r\n\r\nconst LoginForm = ({ handleLogin }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    return (<div>\r\n        <TextField placeholder=\"Tunnus...\" name=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} /><br/>\r\n        <TextField placeholder=\"Salasana\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} /><br/>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => handleLogin(username, password)} >Kirjaudu</Button>\r\n    </div>);\r\n}\r\nexport default LoginForm;","import React from 'react'\r\nimport { Typography, Paper, Container, Grid, Button} from '@material-ui/core'\r\nimport useStyles from '../hooks/useStyles'\r\nimport nalle from '../assets/kiekkonalle.png'\r\nimport nalleEvil from '../assets/nalleEvil.png'\r\nimport axios from 'axios'\r\nimport LoginForm from './LoginForm'\r\nimport { useState } from 'react'\r\n\r\nconst FrontPage = ({logged}) => {\r\n  const tyylit = useStyles();\r\n  const [wrongPassword, setWrongPassword] = useState(false);\r\n  \r\n  const handleLogin = async (username, password) => {\r\n    try {\r\n      const token = await axios.post((process.env.NODE_ENV !== 'production') ?\r\n        'http://localhost:3001/login' :\r\n        'https://risbeegomfkerho.herokuapp.com/login'\r\n        , { username, password })\r\n      console.log(token);\r\n      logged.setToken(token.data);\r\n\r\n    } catch (e) {\r\n      console.log('Väärä tunnus tai salasana');\r\n      setWrongPassword(true);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Paper style={tyylit.login} elevation={2}>\r\n        <Typography variant=\"h4\">{(wrongPassword) ? 'Väärä tunnus tai salasana perkele' : 'Teretulemast'}</Typography>\r\n        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item xs={6}>\r\n            <img src={(wrongPassword) ? nalleEvil : nalle} alt=\"Kiekkonalle\" width=\"100%\" />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            { !logged.logged\r\n              ? <LoginForm handleLogin={handleLogin} />\r\n              : <Button variant=\"contained\" color=\"primary\" onClick={() => logged.clearToken()}>Logout</Button>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Container>\r\n\r\n  )\r\n}\r\nexport default FrontPage","import axios from 'axios';\r\n\r\nconst apiUrl = (process.env.NODE_ENV !== \"production\") \r\n    ? \"http://localhost:3001/api/games\"\r\n    : \"/api/games\";\r\n\r\nconst gamesList = async () => {\r\n    const token = window.localStorage.getItem(\"passuToken\")\r\n    try {\r\n        const res = await axios.get(apiUrl, {\r\n            headers: {\r\n                Authorization: 'bearer ' + token\r\n            }\r\n        });\r\n        return res.data;\r\n    } catch (e) {\r\n        console.log('Virhe, ' + e.message);\r\n        return null;\r\n    }\r\n}\r\nexport default gamesList;","import { useState, useEffect } from \"react\"\r\nimport gamesList from \"../services/gamesList\";\r\n\r\nconst useGetGames = () => {\r\n\r\n    const [games, setGames] = useState(null)\r\n    useEffect(() => {\r\n        ( async function () {\r\n            setGames( await gamesList());\r\n        })();\r\n    }, [])\r\n\r\n    return games;\r\n}\r\nexport default useGetGames;","import {\r\n    Container, Typography, TextField,\r\n    CircularProgress, Backdrop,\r\n    Card, CardHeader, CardContent,\r\n    Table, TableHead, TableCell, TableBody, TableRow, TableContainer, Collapse, Button, Switch\r\n} from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\nimport useGetGames from \"../hooks/useGetGames\"\r\nimport { ArgumentAxis, Chart, Legend, LineSeries, SplineSeries, ValueAxis } from \"@devexpress/dx-react-chart-material-ui\"\r\n\r\nconst GameList = () => {\r\n\r\n    const [filter, setFilter] = useState('')\r\n\r\n    const games = useGetGames();\r\n    if (games === null || !games) return (<Backdrop open={true}><CircularProgress /></Backdrop>)\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\" gutterBottom>Kilpailut</Typography>\r\n            <TextField variant=\"outlined\" size=\"small\" value={filter} placeholder=\"Suodata radan nimellä\" margin=\"normal\" onChange={(e) => setFilter(e.target.value)} />\r\n            {games.filter(fg => fg.course.name.toLowerCase().includes(filter.toLowerCase())).reverse().map(g => <SingleGame game={g} key={g.course.name + g.date} />)}\r\n        </Container>\r\n    )\r\n}\r\nconst SingleGame = ({ game }) => {\r\n\r\n    const [showChart, setShowChart] = useState(false)\r\n    const [showProgress, setShowProgress] = useState(false)\r\n\r\n    const rataOtsikot = () => game.players[0].score.reduce((p, c, i) => {\r\n        return (c !== \"\") ? [...p, <TableCell>{i + 1}</TableCell>] : p;\r\n    }, []);\r\n  \r\n    return (\r\n        <Card style={{ marginBottom: 10 }}>\r\n            <CardHeader\r\n                title={game.course.name}\r\n                subheader={<>       \r\n                {game.course.layout}<br />\r\n                <span style={{ fontSize: '0.7em', padding: 0}}>{game.date}</span>\r\n                </>}\r\n                action={<Button onClick={() => setShowChart(!showChart)}>Viivoja</Button>}\r\n            />\r\n            <CardContent>\r\n                Näytä tuloskehitys: <Switch checked={showProgress} onChange={() => setShowProgress(!showProgress)} />\r\n                <TableContainer>\r\n                    <Table size=\"small\" padding=\"none\" className=\"peliTaulu\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Pelaaja</TableCell>\r\n                                {rataOtsikot()}\r\n                                <TableCell>Total</TableCell>\r\n                                <TableCell>+/-</TableCell>\r\n                                <TableCell>HC total</TableCell>\r\n                                <TableCell>HC rank</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {game.players.map(p => <SinglePlayer key={game.date + p.name} player={p} rataPar={game.course.pars} showProgress={showProgress} />)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n            </CardContent>\r\n            <Collapse in={showChart} unmountOnExit={true}>\r\n                <Chart data={createChartData(game, showProgress)} style={{ maxHeight: 350 }}>\r\n                    { game.players.map(p => <SplineSeries argumentField=\"Rata\" valueField={p.name} name={p.name} />)}\r\n                    <ArgumentAxis />\r\n                    <ValueAxis/>\r\n                    <Legend position=\"right\" />\r\n                </Chart>\r\n            </Collapse>\r\n        </Card>\r\n    )\r\n}\r\nconst SinglePlayer = ({ player, rataPar, showProgress }) => {\r\n\r\n    const tulosVari = (tulos, vayla) => {\r\n        switch (tulos - (+rataPar[vayla])) {\r\n            case 0:\r\n                return '#dfefdf'\r\n            case -1:\r\n                return '#82b7ff'\r\n            case -2:\r\n                return '#f5e942'\r\n            case 1:\r\n                return '#ffe382'\r\n            default:\r\n                return '#f5a182'\r\n        }\r\n    }\r\n    let summa = 0;\r\n    return (\r\n        <TableRow>\r\n            <TableCell>\r\n                {player.name}\r\n            </TableCell>\r\n            {player.score.map((s, i) => {\r\n                summa += s - (+rataPar[i]);\r\n                if (s !== '') return <TableCell\r\n                    style={{ backgroundColor: tulosVari(s, i) }}\r\n                >{(showProgress) ? summa : s}\r\n                </TableCell>\r\n                else return null;\r\n            })}\r\n            <TableCell>{player.total}</TableCell>\r\n            <TableCell>{player.plusminus}</TableCell>\r\n            <TableCell>{player.totalHC}</TableCell>\r\n            <TableCell>{player.rankHC}</TableCell>            \r\n        </TableRow>\r\n    )\r\n}\r\nconst createChartData = (game, showProgress) => {\r\n    const chartData = game.players.reduce((p, c) => {\r\n        let summa=0\r\n        const player = c.score.reduce((pp, cc, ii) => {\r\n            if (cc === '') return pp;\r\n            const tulos = (showProgress) \r\n                ? summa\r\n                : cc;\r\n            summa += cc-game.course.pars[ii];\r\n            //console.log(tulos);\r\n            return [...pp, { Rata: (ii + 1), [c.name]: Number(tulos) }]\r\n        }, [])\r\n        return [...p, ...player];\r\n    }, [])\r\n    return chartData;\r\n}\r\nexport default GameList","import { Animation } from \"@devexpress/dx-react-chart\"\r\nimport { Chart, ArgumentAxis, ValueAxis, SplineSeries } from \"@devexpress/dx-react-chart-material-ui\"\r\nimport { Paper } from \"@material-ui/core\"\r\n\r\n\r\nconst LineChart = ({ data }) => {\r\n\r\n    return (\r\n        <Paper>\r\n            <Chart\r\n                style={{ maxHeight: 250 }}\r\n                data={data}\r\n            >\r\n                <SplineSeries valueField=\"value\" argumentField=\"index\" />\r\n                <ArgumentAxis />\r\n                <ValueAxis />\r\n                <Animation />\r\n            </Chart>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import { Animation, ArgumentScale, Stack } from \"@devexpress/dx-react-chart\"\r\nimport { Chart, ArgumentAxis, ValueAxis, BarSeries, Title, Legend } from \"@devexpress/dx-react-chart-material-ui\"\r\nimport { scaleBand } from '@devexpress/dx-chart-core';\r\nimport { Paper } from \"@material-ui/core\"\r\n\r\n\r\nconst BarChart = ({ data }) => {\r\n    return (\r\n        <Paper>\r\n            <Chart data={data} style={{ maxHeight: 250 }}>\r\n                <ArgumentScale factory={scaleBand} />\r\n                <ArgumentAxis />\r\n                <ValueAxis />\r\n                <Legend />\r\n                <Title \r\n                    text=\"Ratadata\"\r\n                />\r\n                <BarSeries\r\n                    argumentField=\"nimi\"\r\n                    valueField=\"keskiarvo\"\r\n                    name=\"Keskiarvo\"\r\n                />\r\n                <BarSeries\r\n                    argumentField=\"nimi\"\r\n                    valueField=\"mediaani\"\r\n                    name=\"Mediaani\"\r\n                />\r\n                <Animation />\r\n                <Stack />\r\n            </Chart>\r\n        </Paper>\r\n    )\r\n}\r\nexport default BarChart;","import axios from 'axios';\r\n\r\nconst apiUrl = (process.env.NODE_ENV !== \"production\") \r\n    ? \"http://localhost:3001/api/hc\"\r\n    : \"/api/hc\";\r\n\r\nconst handicapList = async () => {\r\n    const token = window.localStorage.getItem(\"passuToken\")\r\n    try {\r\n        const res = await axios.get(apiUrl, {\r\n            headers: {\r\n                Authorization: 'bearer ' + token\r\n            }\r\n        });\r\n        return res.data;\r\n    } catch (e) {\r\n        console.log('Virhe, ' + e.message);\r\n        return null;\r\n    }\r\n}\r\nexport default handicapList;","import { useEffect, useState } from \"react\";\r\nimport handicapList from \"../services/handicapList\";\r\n\r\nconst useGetHcList = () => {\r\n    const [hcList, setHcList] = useState(null);\r\n    useEffect(() => {\r\n        ( async function() {\r\n            setHcList( await handicapList());\r\n        })();\r\n    }, [])\r\n    return hcList;\r\n}\r\nexport default useGetHcList;","import { CardContent, CardHeader, Container, Typography, Card, Paper, TableContainer, Table, TableRow, TableCell,\r\n    TableHead, TableBody, Backdrop, CircularProgress, Collapse, IconButton, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport TextField from \"./TextField\";\r\nimport LineChart from \"./LineChart\";\r\nimport BarChart from \"./BarCharts\";\r\nimport { InsertChartOutlined } from \"@material-ui/icons\";\r\nimport useGetHcList from \"../hooks/useGetHcList\";\r\n\r\n\r\nconst HandicapList = () => {\r\n\r\n    const hcList = useGetHcList();\r\n    const [filter, setFilter] = useState('')\r\n\r\n       if (hcList === null) return (<Backdrop open={true}><CircularProgress /></Backdrop>);\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h3\">Handicapit</Typography>\r\n            <TextField placeholder=\"Etsi rata\" value={filter} onChange={(e) => setFilter(e.target.value)} size=\"small\" />\r\n            {hcList.filter(r => r.course.name.includes(filter))\r\n                .map(i => <Rata key={i.course.name + i.course.layout} rata={i} />)}\r\n        </Container>\r\n    )\r\n}\r\nconst Rata = ({ rata }) => {\r\n    const [rataAuki, setRataAuki] = useState(false);\r\n    return (\r\n        <Card component={Paper} elevation={3} style={{ marginBottom: 10 }}>\r\n            <CardHeader\r\n                title={rata.course.name}\r\n                subheader={rata.course.layout}\r\n                action={<IconButton onClick={() => setRataAuki(!rataAuki)}><InsertChartOutlined /></IconButton>}\r\n            />\r\n            <CardContent>\r\n                <TableContainer>\r\n                    <Table size=\"small\" className=\"taulu\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Nimi</TableCell>\r\n                                <TableCell>HC</TableCell>\r\n                                <TableCell>Pelit</TableCell>\r\n                                <TableCell>Keskiarvo</TableCell>\r\n                                <TableCell>Mediaani</TableCell>\r\n                                <TableCell>Viim. 10 kierrosta</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rata.players.sort((a, b) => b.games - a.games)\r\n                                .map(p => <Pelaaja key={p.name + rata.course.name + rata.course.layout} pelaaja={p} />)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Collapse in={rataAuki} unmountOnExit={true}>\r\n                    <BarChart data={rata.players.map(p => {\r\n                        return {\r\n                            nimi: p.name,\r\n                            keskiarvo: p.average,\r\n                            mediaani: p.median,\r\n                            hc: p.hc\r\n                        }\r\n                    })} />\r\n                    <Button onClick={() => setRataAuki(false)}>Sulje...</Button>\r\n                </Collapse>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\nconst Pelaaja = ({ pelaaja }) => {\r\n    const { name, games, average, median, lastRounds, hc } = pelaaja;\r\n    const [pelaajaAuki, setPelaajaAuki] = useState(false);\r\n    return (\r\n        <>\r\n            <TableRow onClick={() => setPelaajaAuki(!pelaajaAuki)}>\r\n                <TableCell><b>{name}</b></TableCell>\r\n                <TableCell>{hc}</TableCell>\r\n                <TableCell>{games}</TableCell>\r\n                <TableCell>{Math.round(average * 100) / 100}</TableCell>\r\n                <TableCell>{median}</TableCell>\r\n                <TableCell>{JSON.stringify(lastRounds.slice(0,10)).slice(1, -1).replace(/[,]/g, ', ')}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0, border: 0 }} colSpan={6}>\r\n                    <Collapse in={pelaajaAuki} unmountOnExit>\r\n                        <LineChart data={lastRounds.map((v,i) => {\r\n                            return { index: i, value: v }\r\n                        } )} />\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </>\r\n    )\r\n}\r\nexport default HandicapList;\r\n","import { Backdrop, CircularProgress, Container, Divider, MenuItem, Select, Typography } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { useEffect, useState } from \"react\";\r\nimport useGetGames from \"../hooks/useGetGames\";\r\n\r\nconst pisteet = [0,5,4,3,2,1,0,0,0,0,0,0,0,0,0]\r\n\r\nconst Kilpataulukko = () => {\r\n\r\n    const [pelaajaRivit, setPelaajaRivit] = useState([]);\r\n    const [dataToShow, setDataToShow] = useState('rank');\r\n\r\n    const pelit = useGetGames();\r\n    useEffect(() => {\r\n        if (pelit !== null) {\r\n            const pelaajat = [];\r\n            for (const peli of pelit) {\r\n                for (const pelaaja of peli.players) {\r\n                    let pelaajaObj = pelaajat.find(x => x.name === pelaaja.name);\r\n                    if (pelaajaObj === null || !pelaajaObj) { pelaajaObj = { name: pelaaja.name, points: 0, id: pelaaja.name }; pelaajat.push(pelaajaObj); }\r\n                    pelaaja.points = pisteet[pelaaja.rankHC];\r\n                    pelaajaObj.points += pelaaja.points;\r\n                    pelaajaObj[peli._id] = pelaaja;\r\n                }\r\n            }\r\n            console.log(pelaajat);\r\n            setPelaajaRivit(pelaajat);\r\n        }\r\n    }, [pelit]);\r\n    if (pelit === null) return (<Backdrop open={true}><CircularProgress /></Backdrop>)\r\n    const columns = pelit.map((p, i) => {\r\n        return {\r\n            headerName: (i + 1),\r\n            field: p._id,\r\n            width: 73,\r\n            description: `${p.course.name} / ${p.course.layout} (${p.date})`\r\n        }\r\n    })\r\n    columns.unshift({ headerName: 'Pelaaja', field: 'name', width: 100 })\r\n    columns.push( { headerName: 'Points total', field: 'points', width: 100 })\r\n    \r\n    let rows = pelaajaRivit.map(r => {\r\n        const copyR = {...r}\r\n        Object.keys(copyR).map(key => {\r\n            if (typeof copyR[key] === \"object\")\r\n                copyR[key] = copyR[key][dataToShow];\r\n            return copyR[key]\r\n        })\r\n        return copyR;\r\n    });\r\n    console.log(rows);\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\">Kisataulukko</Typography>\r\n            Näytä data: <Select\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={(value) => {\r\n                    console.log(value.target.value);\r\n                    setDataToShow(value.target.value)\r\n                }}\r\n                value={dataToShow}\r\n            >\r\n                <MenuItem value=\"rank\">Rank</MenuItem>\r\n                <MenuItem value=\"rankHC\">RankHC</MenuItem>\r\n                <MenuItem value=\"total\">Total</MenuItem>\r\n                <MenuItem value=\"totalHC\">TotalHC</MenuItem>\r\n                <MenuItem value=\"plusminus\">Plusminus</MenuItem>\r\n                <MenuItem value=\"HC\">Handicap</MenuItem>\r\n                <MenuItem value=\"points\">Points</MenuItem>\r\n            </Select>\r\n            <Divider style={{marginBottom: 15, marginTop: 15}} />\r\n                <DataGrid\r\n                    className=\"datataulu\"\r\n                    disableColumnMenu={true}\r\n                    autoHeight={true}\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    pageSize={15}\r\n                />\r\n        </Container>\r\n    )\r\n}\r\nexport default Kilpataulukko;","import { Button } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport useStyles from \"../hooks/useStyles\";\r\n\r\nconst NaviNappi = ({ to, children }) => {\r\n    const historia = useHistory();\r\n    const tyylit = useStyles();\r\n    return (\r\n        <Button \r\n            onClick={ () => historia.push(to) } \r\n            style={tyylit.navButton}\r\n        >{children}</Button>\r\n    )\r\n}\r\nexport default NaviNappi","import { AppBar, Toolbar } from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport NaviNappi from \"./NaviNappi\";\r\n\r\nconst Navipalkki = () => {\r\n    const [ barOpacity, setBarOpacity ] = useState({ opacity: 1 });\r\n\r\n    useEffect( () => {\r\n        window.addEventListener('scroll', () => {\r\n            const newOpa = (1-Number(window.scrollY)/1000)\r\n            if (newOpa < 0.1) setBarOpacity({ visibility: 'hidden' })\r\n            else setBarOpacity({ opacity: newOpa })\r\n        })\r\n    }, [])\r\n    return (\r\n        <AppBar position=\"sticky\" style={barOpacity}>\r\n            <Toolbar style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                <NaviNappi to=\"/\">Etusivu</NaviNappi>\r\n                <NaviNappi to=\"/points\">Kisataulu</NaviNappi>\r\n                <NaviNappi to=\"/games\">Pelit</NaviNappi>\r\n                <NaviNappi to=\"/hc\">HC</NaviNappi>\r\n                <NaviNappi to=\"/upload\">Lähetä .csv</NaviNappi>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\nexport default Navipalkki;","import { Backdrop, Button, CircularProgress, Container, Typography, Paper } from \"@material-ui/core\"\r\nimport axios from \"axios\"\r\nimport { useState } from \"react\"\r\nimport TextField from \"./TextField\"\r\n\r\nconst UploadCsv = () => {\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n    const [uploadResponse, setUploadResponse] = useState(null);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData()\r\n        data.append('filu', e.target.filu.files[0])\r\n        const token = window.localStorage.getItem('passuToken')\r\n        setUploading(true);\r\n        axios.post((process.env.NODE_ENV !== 'production' ?\r\n            'http://localhost:3001/upload' :\r\n            'https://risbeegomfkerho.herokuapp.com/upload'\r\n        ), data, {\r\n            headers: { Authorization: 'bearer ' + token }\r\n        }).then(res => {\r\n            console.log(res.data)\r\n            setUploadResponse(res.data);\r\n        }).catch(e => {\r\n            console.log('Error', e)\r\n        }).finally(() => {\r\n            setUploading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Backdrop open={uploading}>\r\n                <CircularProgress />\r\n            </Backdrop>\r\n            {(uploadResponse !== null && <UploadStats stats={uploadResponse} />)}\r\n            <Typography variant=\"h4\" gutterBottom>Lähetä .csv</Typography>\r\n            <Typography paragraph>\r\n                Lähetä Udiscin .csv tiedosto\r\n            </Typography>\r\n            <form onSubmit={onSubmit}>\r\n                <TextField type=\"file\" name=\"filu\" /><br />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Lähetä</Button>\r\n            </form>\r\n        </Container>\r\n\r\n    )\r\n}\r\nconst UploadStats = ({ stats }) => {\r\n\r\n    return (\r\n        <Paper style={{ padding: 10, marginBottom: 10 }} elevation={3}>\r\n            <Typography variant=\"h4\">Pelejä lisätty: <b>{stats.uusia}</b></Typography>\r\n            <Typography variant=\"h5\">Duplikaatteja: <b>{stats.duplikaatteja}</b></Typography>\r\n\r\n            <Typography variant=\"h5\">Hylätyt tuloskortit</Typography>\r\n            <ul>\r\n                <li>Väärä päivä: {stats.wrongDate} kpl</li>\r\n                <li>Väärä nimi: {stats.wrongName.count} kpl</li>\r\n                <ul>\r\n                    {stats.wrongName.names.map(name => <li key={name}>{name}</li>)}\r\n                </ul>\r\n            </ul>\r\n        </Paper>\r\n    )\r\n}\r\nexport default UploadCsv","import { useEffect, useState } from \"react\";\r\n\r\nconst useIsLggedIn = () => {\r\n    const [logged, setLogged] = useState(false);\r\n\r\n    const clearToken = () => {\r\n        window.localStorage.clear();\r\n        setLogged(false);\r\n    }\r\n    const setToken = (token) => {\r\n        window.localStorage.setItem('passuToken', token);\r\n        setLogged(true);\r\n    }\r\n\r\n    useEffect( () => {\r\n        const token = window.localStorage.getItem('passuToken');\r\n        if (token !== null) setLogged(true);\r\n    }, [])\r\n    return { logged, setToken, clearToken }\r\n}   \r\nexport default useIsLggedIn;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport FrontPage from \"./components/FrontPage\";\nimport GameList from \"./components/GameList\";\nimport HandicapList from \"./components/HandicapList\";\nimport Kilpataulukko from \"./components/Kilpataulukko\";\nimport Navipalkki from \"./components/Navipalkki\";\nimport UploadCsv from \"./components/UploadCsv\";\nimport useIsLggedIn from \"./hooks/useIsLoggedIn\";\n\nconst App = () => {\n\n  const logged = useIsLggedIn();\n\n  return (\n    <BrowserRouter>\n\n      {(logged.logged && <Navipalkki />)}\n      <Switch>\n        <Route path=\"/games\">\n          <GameList />\n        </Route>\n        <Route path=\"/points\">\n          <Kilpataulukko />\n        </Route>\n        <Route path=\"/hc\">\n          <HandicapList />\n        </Route>\n        <Route path=\"/upload\">\n          <UploadCsv />\n        </Route>\n        <Route path=\"/\">\n          <FrontPage logged={logged} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}