{"version":3,"sources":["hooks/useStyles.js","assets/kiekkonalle.png","assets/nalleEvil.png","components/TextField.jsx","components/LoginForm.jsx","components/FrontPage.jsx","services/gamesList.js","hooks/useGetGames.js","components/GameList.jsx","components/LineChart.jsx","components/BarCharts.jsx","services/handicapList.js","hooks/useGetHcList.js","components/HandicapList.jsx","components/Kilpataulukko.jsx","components/NaviNappi.jsx","components/Navipalkki.jsx","components/UploadCsv.jsx","hooks/useIsLoggedIn.js","App.js","index.js"],"names":["useStyles","createStyles","container","margin","login","borderRadius","borderWidth","padding","alignItems","marginTop","maxWidth","textfield","marginBottom","navButton","color","fontSize","TextField","props","tyylit","style","variant","LoginForm","handleLogin","useState","username","setUsername","password","setPassword","placeholder","name","value","onChange","e","target","Button","onClick","FrontPage","logged","wrongPassword","setWrongPassword","a","axios","post","token","console","log","setToken","data","Container","Typography","Grid","direction","justifyContent","item","xs","src","nalleEvil","nalle","alt","width","clearToken","gamesList","window","localStorage","getItem","get","headers","Authorization","res","message","useGetGames","games","setGames","useEffect","SingleGame","game","showChart","setShowChart","showProgress","setShowProgress","Card","CardHeader","title","course","subheader","layout","date","action","CardContent","Switch","checked","TableContainer","Table","size","className","TableHead","TableRow","TableCell","players","score","reduce","p","c","i","TableBody","sort","b","rankHC","map","player","rataPar","pars","Collapse","in","unmountOnExit","createChartData","maxHeight","argumentField","valueField","position","SinglePlayer","tulosVari","tulos","vayla","summa","s","backgroundColor","total","plusminus","HC","pp","cc","ii","Rata","Number","GameList","filter","setFilter","gutterBottom","fg","toLowerCase","includes","reverse","g","Backdrop","open","CircularProgress","LineChart","Paper","BarChart","factory","scaleBand","text","handicapList","useGetHcList","hcList","setHcList","rata","rataAuki","setRataAuki","component","elevation","IconButton","InsertChartOutlined","pelaaja","nimi","keskiarvo","average","mediaani","median","hc","Pelaaja","lastRounds","pelaajaAuki","setPelaajaAuki","Math","round","JSON","stringify","slice","replace","paddingBottom","paddingTop","border","colSpan","v","index","HandicapList","r","pisteet","Kilpataulukko","pelaajaRivit","setPelaajaRivit","dataToShow","setDataToShow","pelit","pelaajat","peli","pelaajaObj","find","x","points","id","push","_id","columns","headerName","field","description","unshift","rows","copyR","Object","keys","key","Select","MenuItem","Divider","disableColumnMenu","autoHeight","pageSize","NaviNappi","to","children","historia","useHistory","Navipalkki","showMenu","setShowMenu","Slide","setTimeout","transform","timeout","AppBar","opacity","Toolbar","flex","flexDirection","componen","UploadStats","stats","uusia","duplikaatteja","wrongDate","wrongName","count","names","UploadCsv","uploading","setUploading","uploadResponse","setUploadResponse","paragraph","onSubmit","preventDefault","FormData","append","filu","files","then","catch","finally","type","useIsLggedIn","setLogged","setItem","clear","App","path","ReactDOM","render","document","getElementById"],"mappings":"8RA4BeA,EA1BG,WAwBd,OAvBeC,YAAa,CACxBC,UAAW,CACPC,OAAQ,QAEZC,MAAO,CACHC,aAAc,GACdC,YAAa,EACbC,QAAS,GACTC,WAAY,SACZL,OAAQ,OACRM,UAAW,MACXC,SAAU,SAEdC,UAAW,CACPC,aAAc,IAElBC,UAAW,CACPC,MAAO,WACPC,SAAU,MACVR,QAAS,UCtBN,MAA0B,wCCA1B,MAA0B,sC,yCCQ1BS,EANG,SAACC,GACf,IAAMC,EAASlB,IACf,OACI,cAAC,IAAD,yBAAmBmB,MAAOD,EAAOP,WAAeM,GAAhD,IAAuDG,QAAQ,eCSxDC,EAVG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACjB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,OAAQ,gCACJ,cAAC,EAAD,CAAWC,YAAY,YAAYC,KAAK,WAAWC,MAAON,EAAUO,SAAU,SAACC,GAAD,OAAOP,EAAYO,EAAEC,OAAOH,UAAU,uBACpH,cAAC,EAAD,CAAWF,YAAY,WAAWC,KAAK,WAAWC,MAAOJ,EAAUK,SAAU,SAACC,GAAD,OAAOL,EAAYK,EAAEC,OAAOH,UAAU,uBACnH,cAACI,EAAA,EAAD,CAAQd,QAAQ,YAAYN,MAAM,UAAUqB,QAAS,kBAAMb,EAAYE,EAAUE,IAAjF,0BCmCOU,EArCG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEnB,GADerC,IAC2BuB,oBAAS,IAAnD,mBAAOe,EAAP,KAAsBC,EAAtB,KAEMjB,EAAW,uCAAG,WAAOE,EAAUE,GAAjB,eAAAc,EAAA,+EAEIC,IAAMC,KAExB,8CACE,CAAElB,WAAUE,aALA,OAEViB,EAFU,OAMhBC,QAAQC,IAAIF,GACZN,EAAOS,SAASH,EAAMI,MAPN,gDAUhBH,QAAQC,IAAI,sCACZN,GAAiB,GAXD,yDAAH,wDAejB,OACE,eAACS,EAAA,EAAD,CAAWtC,SAAS,KAAKS,MAAO,CAAEZ,QAAS,IAA3C,UACE,cAAC0C,EAAA,EAAD,CAAY7B,QAAQ,KAApB,SAA2BkB,EAAiB,6CAAsC,iBAClF,eAACY,EAAA,EAAD,CAAMhD,WAAS,EAACiD,UAAU,MAAMC,eAAe,gBAAgB5C,WAAW,SAA1E,UACE,cAAC0C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,qBAAKC,IAAMjB,EAAiBkB,EAAYC,EAAOC,IAAI,cAAcC,MAAM,WAEzE,cAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACIjB,EAAOA,OAEL,cAACH,EAAA,EAAD,CAAQd,QAAQ,YAAYN,MAAM,UAAUqB,QAAS,kBAAME,EAAOuB,cAAlE,oBADA,cAAC,EAAD,CAAWtC,YAAaA,a,qICjBvBuC,EAdA,uCAAG,8BAAArB,EAAA,6DACRG,EAAQmB,OAAOC,aAAaC,QAAQ,cAD5B,kBAGQvB,IAAMwB,IAL1B,aAKsC,CAChCC,QAAS,CACLC,cAAe,UAAYxB,KALzB,cAGJyB,EAHI,yBAQHA,EAAIrB,MARD,uCAUVH,QAAQC,IAAI,UAAY,KAAEwB,SAVhB,kBAWH,MAXG,yDAAH,qDCQAC,EAXK,WAEhB,MAA0B/C,mBAAS,MAAnC,mBAAOgD,EAAP,KAAcC,EAAd,KAOA,OANAC,qBAAU,WACN,sBAAE,sBAAAjC,EAAA,kEACEgC,EADF,SACkBX,IADlB,4EAAF,KAGD,IAEIU,G,gBCaLG,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAElB,EAAkCpD,oBAAS,GAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAAwCtD,oBAAS,GAAjD,mBAAOuD,EAAP,KAAqBC,EAArB,KAMA,OACI,eAACC,EAAA,EAAD,CAAM7D,MAAO,CAAEP,aAAc,IAA7B,UACI,cAACqE,EAAA,EAAD,CACIC,MAAOP,EAAKQ,OAAOtD,KACnBuD,UAAW,qCACVT,EAAKQ,OAAOE,OAAO,uBACpB,sBAAMlE,MAAO,CAAEJ,SAAU,SAAzB,SAAoC4D,EAAKW,UAEzCC,OAAQ,cAACrD,EAAA,EAAD,CAAQC,QAAS,kBAAM0C,GAAcD,IAArC,uBAEZ,eAACY,EAAA,EAAD,wCACwB,cAACC,EAAA,EAAD,CAAQC,QAASZ,EAAc/C,SAAU,kBAAMgD,GAAiBD,MACpF,cAACa,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAOC,KAAK,QAAQtF,QAAQ,OAAOuF,UAAU,YAA7C,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,sBApBFtB,EAAKuB,QAAQ,GAAGC,MAAMC,QAAO,SAACC,EAAGC,EAAGC,GAC1D,MAAc,KAAND,EAAD,sBAAiBD,GAAjB,CAAoB,cAACJ,EAAA,EAAD,UAAYM,EAAI,MAAkBF,IAC9D,IAoByB,cAACJ,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,kBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,2BAGR,cAACO,EAAA,EAAD,UACK7B,EAAKuB,QAAQO,MAAK,SAACjE,EAAEkE,GAAH,OAASlE,EAAEmE,OAAOD,EAAEC,UAAQC,KAAI,SAAAP,GAAC,OAAI,cAAC,EAAD,CAEpDQ,OAAQR,EACRS,QAASnC,EAAKQ,OAAO4B,KACrBjC,aAAcA,GAHTH,EAAKW,KAAOe,EAAExE,mBAUvC,cAACmF,EAAA,EAAD,CAAUC,GAAIrC,EAAWsC,eAAe,EAAxC,SACI,eAAC,IAAD,CAAOnE,KAAMoE,EAAgBxC,EAAMG,GAAe3D,MAAO,CAAEiG,UAAW,KAAtE,UACMzC,EAAKuB,QAAQU,KAAI,SAAAP,GAAC,OAAI,cAAC,IAAD,CAAcgB,cAAc,OAAOC,WAAYjB,EAAExE,KAAMA,KAAMwE,EAAExE,UACvF,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAQ0F,SAAS,UACjB,cAAC,IAAD,aAMdC,EAAe,SAAC,GAAuC,IAArCX,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,QAAShC,EAAmB,EAAnBA,aAE/B2C,EAAY,SAACC,EAAOC,GACtB,OAAQD,GAAUZ,EAAQa,IACtB,KAAK,EACD,MAAO,UACX,KAAM,EACF,MAAO,UACX,KAAM,EACF,MAAO,UACX,KAAK,EACD,MAAO,UACX,QACI,MAAO,YAGfC,EAAQ,EACZ,OACI,eAAC5B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACKY,EAAOhF,OAEXgF,EAAOV,MAAMS,KAAI,SAACiB,EAAGtB,GAElB,OADAqB,GAASC,GAAMf,EAAQP,GACb,KAANsB,EAAiB,cAAC5B,EAAA,EAAD,CACjB9E,MAAO,CAAE2G,gBAAiBL,EAAUI,EAAGtB,IADtB,SAElBzB,EAAgB8C,EAAQC,IAEf,QAEhB,cAAC5B,EAAA,EAAD,UAAYY,EAAOkB,QACnB,cAAC9B,EAAA,EAAD,UAAYY,EAAOmB,YACnB,cAAC/B,EAAA,EAAD,UAAcY,EAAOmB,UAAYnB,EAAOoB,KACxC,cAAChC,EAAA,EAAD,UAAYY,EAAOF,aAIzBQ,EAAkB,SAACxC,EAAMG,GAc3B,OAbkBH,EAAKuB,QAAQE,QAAO,SAACC,EAAGC,GACtC,IAAIsB,EAAM,EACJf,EAASP,EAAEH,MAAMC,QAAO,SAAC8B,EAAIC,EAAIC,GACnC,GAAW,KAAPD,EAAW,OAAOD,EACtBN,GAASO,EAAGxD,EAAKQ,OAAO4B,KAAKqB,GAC7B,IAAMV,EAAS5C,EACT8C,EACAO,EAEN,MAAM,GAAN,mBAAWD,GAAX,cAAiBG,KAAOD,EAAG,GAAK9B,EAAEzE,KAAOyG,OAAOZ,QACjD,IACH,MAAM,GAAN,mBAAWrB,GAAX,YAAiBQ,MAClB,KAGQ0B,EA5HE,WAEb,MAA4BhH,mBAAS,IAArC,mBAAOiH,EAAP,KAAeC,EAAf,KAEMlE,EAAQD,IACd,OAAc,OAAVC,GAAmBA,EAEnB,eAACvB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAY7B,QAAQ,KAAKsH,cAAY,EAArC,uBACA,cAAC,IAAD,CAAWtH,QAAQ,WAAWyE,KAAK,QAAQ/D,MAAO0G,EAAQ5G,YAAY,2BAAwBzB,OAAO,SAAS4B,SAAU,SAACC,GAAD,OAAOyG,EAAUzG,EAAEC,OAAOH,UACjJyC,EAAMiE,QAAO,SAAAG,GAAE,OAAIA,EAAGxD,OAAOtD,KAAK+G,cAAcC,SAASL,EAAOI,kBAAgBE,UAAUlC,KAAI,SAAAmC,GAAC,OAAI,cAAC,EAAD,CAAYpE,KAAMoE,GAAQA,EAAE5D,OAAOtD,KAAOkH,EAAEzD,YALlH,cAAC0D,EAAA,EAAD,CAAUC,MAAM,EAAhB,SAAsB,cAACC,EAAA,EAAD,O,gBCMjDC,EAjBG,SAAC,GAAc,IAAZpG,EAAW,EAAXA,KAEjB,OACI,cAACqG,EAAA,EAAD,UACI,eAAC,IAAD,CACIjI,MAAO,CAAEiG,UAAW,KACpBrE,KAAMA,EAFV,UAII,cAAC,IAAD,CAAcuE,WAAW,QAAQD,cAAc,UAC/C,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,U,QCiBDgC,GA3BE,SAAC,GAAc,IAAZtG,EAAW,EAAXA,KAChB,OACI,cAACqG,EAAA,EAAD,UACI,eAAC,IAAD,CAAOrG,KAAMA,EAAM5B,MAAO,CAAEiG,UAAW,KAAvC,UACI,cAAC,IAAD,CAAekC,QAASC,QACxB,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CACIC,KAAK,aAET,cAAC,IAAD,CACInC,cAAc,OACdC,WAAW,YACXzF,KAAK,cAET,cAAC,IAAD,CACIwF,cAAc,OACdC,WAAW,WACXzF,KAAK,aAET,cAAC,IAAD,IACA,cAAC,IAAD,U,UCRD4H,GAdG,uCAAG,8BAAAjH,EAAA,6DACXG,EAAQmB,OAAOC,aAAaC,QAAQ,cADzB,kBAGKvB,IAAMwB,IAL1B,UAKsC,CAChCC,QAAS,CACLC,cAAe,UAAYxB,KALtB,cAGPyB,EAHO,yBAQNA,EAAIrB,MARE,uCAUbH,QAAQC,IAAI,UAAY,KAAEwB,SAVb,kBAWN,MAXM,yDAAH,qDCMHqF,GATM,WACjB,MAA4BnI,mBAAS,MAArC,mBAAOoI,EAAP,KAAeC,EAAf,KAMA,OALAnF,qBAAU,WACN,sBAAE,sBAAAjC,EAAA,kEACEoH,EADF,SACmBH,KADnB,4EAAF,KAGD,IACIE,GCeLtB,GAAO,SAAC,GAAc,IAAZwB,EAAW,EAAXA,KACZ,EAAgCtI,oBAAS,GAAzC,mBAAOuI,EAAP,KAAiBC,EAAjB,KACA,OACI,eAAC/E,EAAA,EAAD,CAAMgF,UAAWZ,IAAOa,UAAW,EAAG9I,MAAO,CAAEP,aAAc,IAA7D,UACI,cAACqE,EAAA,EAAD,CACIC,MAAO2E,EAAK1E,OAAOtD,KACnBuD,UAAWyE,EAAK1E,OAAOE,OACvBE,OAAQ,cAAC2E,EAAA,EAAD,CAAY/H,QAAS,kBAAM4H,GAAaD,IAAxC,SAAmD,cAACK,GAAA,EAAD,QAE/D,eAAC3E,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAU,QAA9B,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,iBACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,wBACA,cAACA,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,sCAGR,cAACO,EAAA,EAAD,UACKqD,EAAK3D,QAAQO,MAAK,SAACjE,EAAGkE,GAAJ,OAAUA,EAAEnC,MAAQ/B,EAAE+B,SACpCqC,KAAI,SAAAP,GAAC,OAAI,cAAC,GAAD,CAA8D+D,QAAS/D,GAAzDA,EAAExE,KAAOgI,EAAK1E,OAAOtD,KAAOgI,EAAK1E,OAAOE,kBAIhF,eAAC2B,EAAA,EAAD,CAAUC,GAAI6C,EAAU5C,eAAe,EAAvC,UACI,cAAC,GAAD,CAAUnE,KAAM8G,EAAK3D,QAAQU,KAAI,SAAAP,GAC7B,MAAO,CACHgE,KAAMhE,EAAExE,KACRyI,UAAWjE,EAAEkE,QACbC,SAAUnE,EAAEoE,OACZC,GAAIrE,EAAEqE,SAGd,cAACxI,EAAA,EAAD,CAAQC,QAAS,kBAAM4H,GAAY,IAAnC,gCAMdY,GAAU,SAAC,GAAiB,IAAfP,EAAc,EAAdA,QACPvI,EAAiDuI,EAAjDvI,KAAM0C,EAA2C6F,EAA3C7F,MAAOgG,EAAoCH,EAApCG,QAASE,EAA2BL,EAA3BK,OAAQG,EAAmBR,EAAnBQ,WAAYF,EAAON,EAAPM,GAClD,EAAsCnJ,oBAAS,GAA/C,mBAAOsJ,EAAP,KAAoBC,EAApB,KACA,OACI,qCACI,eAAC9E,EAAA,EAAD,CAAU7D,QAAS,kBAAM2I,GAAgBD,IAAzC,UACI,cAAC5E,EAAA,EAAD,UAAW,4BAAIpE,MACf,cAACoE,EAAA,EAAD,UAAYyE,IACZ,cAACzE,EAAA,EAAD,UAAY1B,IACZ,cAAC0B,EAAA,EAAD,UAAY8E,KAAKC,MAAgB,IAAVT,GAAiB,MACxC,cAACtE,EAAA,EAAD,UAAYwE,IACZ,cAACxE,EAAA,EAAD,UAAYgF,KAAKC,UAAUN,EAAWO,MAAM,EAAE,KAAKA,MAAM,GAAI,GAAGC,QAAQ,OAAQ,WAEpF,cAACpF,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAW9E,MAAO,CAAEkK,cAAe,EAAGC,WAAY,EAAGC,OAAQ,GAAKC,QAAS,EAA3E,SACI,cAACxE,EAAA,EAAD,CAAUC,GAAI4D,EAAa3D,eAAa,EAAxC,SACI,cAAC,EAAD,CAAWnE,KAAM6H,EAAWO,QAAQrC,UAAUlC,KAAI,SAAC6E,EAAElF,GACjD,MAAO,CAAEmF,MAAOnF,EAAGzE,MAAO2J,kBAQvCE,GAnFM,WAEjB,IAAMhC,EAASD,KACf,EAA4BnI,mBAAS,IAArC,mBAAOiH,EAAP,KAAeC,EAAf,KAEG,OAAe,OAAXkB,EAAyB,cAACX,EAAA,EAAD,CAAUC,MAAM,EAAhB,SAAsB,cAACC,EAAA,EAAD,MAElD,eAAClG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAY7B,QAAQ,KAApB,wBACA,cAAC,EAAD,CAAWQ,YAAY,YAAYE,MAAO0G,EAAQzG,SAAU,SAACC,GAAD,OAAOyG,EAAUzG,EAAEC,OAAOH,QAAQ+D,KAAK,UAClG8D,EAAOnB,QAAO,SAAAoD,GAAC,OAAIA,EAAEzG,OAAOtD,KAAKgH,SAASL,MACtC5B,KAAI,SAAAL,GAAC,OAAI,cAAC,GAAD,CAA4CsD,KAAMtD,GAAvCA,EAAEpB,OAAOtD,KAAO0E,EAAEpB,OAAOE,e,+CChBxDwG,GAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GA8E9BC,GA5EO,WAElB,MAAwCvK,mBAAS,IAAjD,mBAAOwK,EAAP,KAAqBC,EAArB,KACA,EAAoCzK,mBAAS,QAA7C,mBAAO0K,EAAP,KAAmBC,EAAnB,KAEMC,EAAQ7H,IAiBd,GAhBAG,qBAAU,WACN,GAAc,OAAV0H,EAAgB,CAChB,IADgB,EACVC,EAAW,GADD,eAEGD,GAFH,IAEhB,2BAA0B,CAAC,IAAD,EAAfE,EAAe,uBACAA,EAAKnG,SADL,yBACXkE,EADW,QAEdkC,EAAaF,EAASG,MAAK,SAAAC,GAAC,OAAIA,EAAE3K,OAASuI,EAAQvI,QACpC,OAAfyK,GAAwBA,IAAcA,EAAa,CAAEzK,KAAMuI,EAAQvI,KAAM4K,OAAQ,EAAGC,GAAItC,EAAQvI,MAAQuK,EAASO,KAAKL,IAC1HlC,EAAQqC,OAASZ,GAAQzB,EAAQzD,QACjC2F,EAAWG,QAAUrC,EAAQqC,OAC7BH,EAAWD,EAAKO,KAAOxC,GAL3B,2BAAqC,IADf,gCAFV,8BAWhBxH,QAAQC,IAAIuJ,GACZJ,EAAgBI,MAErB,CAACD,IACU,OAAVA,EAAgB,OAAQ,cAACnD,EAAA,EAAD,CAAUC,MAAM,EAAhB,SAAsB,cAACC,EAAA,EAAD,MAClD,IAAM2D,EAAUV,EAAMvF,KAAI,SAACP,EAAGE,GAC1B,MAAO,CACHuG,WAAavG,EAAI,EACjBwG,MAAO1G,EAAEuG,IACTjJ,MAAO,GACPqJ,YAAY,GAAD,OAAK3G,EAAElB,OAAOtD,KAAd,cAAwBwE,EAAElB,OAAOE,OAAjC,aAA4CgB,EAAEf,KAA9C,SAGnBuH,EAAQI,QAAQ,CAAEH,WAAY,UAAWC,MAAO,OAAQpJ,MAAO,MAC/DkJ,EAAQF,KAAM,CAAEG,WAAY,eAAgBC,MAAO,SAAUpJ,MAAO,MAEpE,IAAIuJ,EAAOnB,EAAanF,KAAI,SAAAgF,GACxB,IAAMuB,EAAK,eAAOvB,GAMlB,OALAwB,OAAOC,KAAKF,GAAOvG,KAAI,SAAA0G,GAGnB,MAF0B,kBAAfH,EAAMG,KACbH,EAAMG,GAAOH,EAAMG,GAAKrB,IACrBkB,EAAMG,MAEVH,KAGX,OADAvK,QAAQC,IAAIqK,GAER,eAAClK,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAY7B,QAAQ,KAApB,0BADJ,qBAEgB,eAACmM,GAAA,EAAD,CACRnM,QAAQ,WACRyE,KAAK,QACL9D,SAAU,SAACD,GACPc,QAAQC,IAAIf,EAAMG,OAAOH,OACzBoK,EAAcpK,EAAMG,OAAOH,QAE/BA,MAAOmK,EAPC,UASR,cAACuB,GAAA,EAAD,CAAU1L,MAAM,OAAhB,kBACA,cAAC0L,GAAA,EAAD,CAAU1L,MAAM,SAAhB,oBACA,cAAC0L,GAAA,EAAD,CAAU1L,MAAM,QAAhB,mBACA,cAAC0L,GAAA,EAAD,CAAU1L,MAAM,UAAhB,qBACA,cAAC0L,GAAA,EAAD,CAAU1L,MAAM,YAAhB,uBACA,cAAC0L,GAAA,EAAD,CAAU1L,MAAM,KAAhB,sBACA,cAAC0L,GAAA,EAAD,CAAU1L,MAAM,SAAhB,uBAEJ,cAAC2L,GAAA,EAAD,CAAStM,MAAO,CAACP,aAAc,GAAIH,UAAW,MAC1C,cAAC,KAAD,CACIqF,UAAU,YACV4H,mBAAmB,EACnBC,YAAY,EACZT,KAAMA,EACNL,QAASA,EACTe,SAAU,S,8BC/DfC,GAVG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACfC,EAAWC,cACX/M,EAASlB,IACf,OACI,cAACkC,EAAA,EAAD,CACIC,QAAU,kBAAM6L,EAASrB,KAAKmB,IAC9B3M,MAAOD,EAAOL,UAFlB,SAGEkN,K,qBC6BKG,GAnCI,WAEf,MAAgC3M,oBAAS,GAAzC,mBAAO4M,EAAP,KAAiBC,EAAjB,KAQA,OACI,qCACI,qBAAKjN,MAAO,CAAEoG,SAAU,SAAxB,SACA,cAAC8G,GAAA,EAAD,CAAOpH,IAAKkH,EAAUhL,UAAU,OAAhC,SACA,cAAC+G,EAAA,EAAD,CAAY/H,QAXH,WACbiM,GAAY,GACZE,YAAW,WACPF,GAAY,KAEb,MAMC,SACI,cAAC,KAAD,CAAUjN,MAAO,CAAEoN,UAAW,sBAIlC,cAACF,GAAA,EAAD,CAAOpH,GAAIkH,EAAUhL,UAAU,QAAQqL,QAAS,KAAhD,SAEA,cAACC,GAAA,EAAD,CAAQlH,SAAS,SAASpG,MAAO,CAAE2G,gBAAiB,UAAW4G,QAAS,IAAxE,SACQ,eAACC,GAAA,EAAD,CAASxN,MAAO,CAAEyN,KAAM,EAAGC,cAAe,MAAOzL,eAAgB,iBAAmB0L,SAAS,OAA7F,UACI,cAAC,GAAD,CAAWhB,GAAG,IAAd,qBACA,cAAC,GAAD,CAAWA,GAAG,UAAd,uBACA,cAAC,GAAD,CAAWA,GAAG,SAAd,mBACA,cAAC,GAAD,CAAWA,GAAG,MAAd,gBACA,cAAC,GAAD,CAAWA,GAAG,UAAd,0CCgBlBiB,GAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEnB,OACI,eAAC5F,EAAA,EAAD,CAAOjI,MAAO,CAAEZ,QAAS,GAAIK,aAAc,IAAMqJ,UAAW,EAA5D,UACI,eAAChH,EAAA,EAAD,CAAY7B,QAAQ,KAApB,mCAAyC,4BAAI4N,EAAMC,WACnD,eAAChM,EAAA,EAAD,CAAY7B,QAAQ,KAApB,4BAAwC,4BAAI4N,EAAME,mBAElD,cAACjM,EAAA,EAAD,CAAY7B,QAAQ,KAApB,oCACA,+BACI,8DAAkB4N,EAAMG,UAAxB,UACA,uDAAiBH,EAAMI,UAAUC,MAAjC,UACA,6BACKL,EAAMI,UAAUE,MAAM1I,KAAI,SAAA/E,GAAI,OAAI,6BAAgBA,GAAPA,eAMjD0N,GA9DG,WAEd,MAAkChO,oBAAS,GAA3C,mBAAOiO,EAAP,KAAkBC,EAAlB,KACA,EAA4ClO,mBAAS,MAArD,mBAAOmO,EAAP,KAAuBC,EAAvB,KAuBA,OACI,eAAC3M,EAAA,EAAD,CAAWtC,SAAS,KAApB,UACI,cAACsI,EAAA,EAAD,CAAUC,KAAMuG,EAAhB,SACI,cAACtG,EAAA,EAAD,MAEiB,OAAnBwG,GAA2B,cAAC,GAAD,CAAaV,MAAOU,IACjD,cAACzM,EAAA,EAAD,CAAY7B,QAAQ,KAAKsH,cAAY,EAArC,+BACA,cAACzF,EAAA,EAAD,CAAY2M,WAAS,EAArB,gDAGA,uBAAMC,SA/BG,SAAC7N,GACdA,EAAE8N,iBACF,IAAM/M,EAAO,IAAIgN,SACjBhN,EAAKiN,OAAO,OAAQhO,EAAEC,OAAOgO,KAAKC,MAAM,IACxC,IAAMvN,EAAQmB,OAAOC,aAAaC,QAAQ,cAC1CyL,GAAa,GACbhN,IAAMC,KAEF,+CACDK,EAAM,CACLmB,QAAS,CAAEC,cAAe,UAAYxB,KACvCwN,MAAK,SAAA/L,GACJxB,QAAQC,IAAIuB,EAAIrB,MAChB4M,EAAkBvL,EAAIrB,SACvBqN,OAAM,SAAApO,GACLY,QAAQC,IAAI,QAASb,MACtBqO,SAAQ,WACPZ,GAAa,OAcb,UACI,cAAC,EAAD,CAAWa,KAAK,OAAOzO,KAAK,SAAS,uBACrC,cAACK,EAAA,EAAD,CAAQoO,KAAK,SAASlP,QAAQ,YAAYN,MAAM,UAAhD,iCCvBDyP,GAlBM,WACjB,MAA4BhP,oBAAS,GAArC,mBAAOc,EAAP,KAAemO,EAAf,KAeA,OAJA/L,qBAAW,WAEO,OADAX,OAAOC,aAAaC,QAAQ,eACtBwM,GAAU,KAC/B,IACI,CAAEnO,SAAQS,SATA,SAACH,GACdmB,OAAOC,aAAa0M,QAAQ,aAAc9N,GAC1C6N,GAAU,IAOa5M,WAbR,WACfE,OAAOC,aAAa2M,QACpBF,GAAU,MC+BHG,GA7BH,WAEV,IAAMtO,EAASkO,KAEf,OACE,eAAC,IAAD,WAEIlO,EAAOA,QAAU,cAAC,GAAD,IACnB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuO,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,MAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,CAAWvO,OAAQA,aC1B7BwO,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.215d4632.chunk.js","sourcesContent":["import { createStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = () => {\r\n    const tyylit = createStyles({\r\n        container: {\r\n            margin: 'auto',\r\n        },\r\n        login: {\r\n            borderRadius: 15,\r\n            borderWidth: 3,\r\n            padding: 20,\r\n            alignItems: 'center',\r\n            margin: 'auto',\r\n            marginTop: '20%',\r\n            maxWidth: '500px'\r\n        },\r\n        textfield: {\r\n            marginBottom: 10,\r\n        },\r\n        navButton: {\r\n            color: 'darkblue',\r\n            fontSize: '3vw',\r\n            padding: '1vh'\r\n            \r\n        },\r\n    })\r\n    return tyylit;\r\n}\r\nexport default useStyles;","export default __webpack_public_path__ + \"static/media/kiekkonalle.f1098de8.png\";","export default __webpack_public_path__ + \"static/media/nalleEvil.c4c04d00.png\";","import { TextField as OriginalTextField } from \"@material-ui/core\"\r\nimport useStyles from \"../hooks/useStyles\"\r\nconst TextField = (props) => {\r\n    const tyylit = useStyles();\r\n    return (\r\n        <OriginalTextField style={tyylit.textfield} {...props} variant=\"outlined\" />\r\n    )\r\n}\r\nexport default TextField;","import { Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport TextField from \"./TextField\";\r\n\r\nconst LoginForm = ({ handleLogin }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    return (<div>\r\n        <TextField placeholder=\"Tunnus...\" name=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} /><br/>\r\n        <TextField placeholder=\"Salasana\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} /><br/>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => handleLogin(username, password)} >Kirjaudu</Button>\r\n    </div>);\r\n}\r\nexport default LoginForm;","import React from 'react'\r\nimport { Typography, Paper, Container, Grid, Button } from '@material-ui/core'\r\nimport useStyles from '../hooks/useStyles'\r\nimport nalle from '../assets/kiekkonalle.png'\r\nimport nalleEvil from '../assets/nalleEvil.png'\r\nimport axios from 'axios'\r\nimport LoginForm from './LoginForm'\r\nimport { useState } from 'react'\r\n\r\nconst FrontPage = ({ logged }) => {\r\n  const tyylit = useStyles();\r\n  const [wrongPassword, setWrongPassword] = useState(false);\r\n\r\n  const handleLogin = async (username, password) => {\r\n    try {\r\n      const token = await axios.post((process.env.NODE_ENV !== 'production') ?\r\n        'http://localhost:3001/login' :\r\n        'https://risbeegomfkerho.herokuapp.com/login'\r\n        , { username, password })\r\n      console.log(token);\r\n      logged.setToken(token.data);\r\n\r\n    } catch (e) {\r\n      console.log('Väärä tunnus tai salasana');\r\n      setWrongPassword(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" style={{ padding: 60}}>\r\n      <Typography variant=\"h4\">{(wrongPassword) ? 'Väärä tunnus tai salasana perkele' : 'Teretulemast'}</Typography>\r\n      <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Grid item xs={6}>\r\n          <img src={(wrongPassword) ? nalleEvil : nalle} alt=\"Kiekkonalle\" width=\"100%\" />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {!logged.logged\r\n            ? <LoginForm handleLogin={handleLogin} />\r\n            : <Button variant=\"contained\" color=\"primary\" onClick={() => logged.clearToken()}>Logout</Button>\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n\r\n  )\r\n}\r\nexport default FrontPage","import axios from 'axios';\r\n\r\nconst apiUrl = (process.env.NODE_ENV !== \"production\") \r\n    ? \"http://localhost:3001/api/games\"\r\n    : \"/api/games\";\r\n\r\nconst gamesList = async () => {\r\n    const token = window.localStorage.getItem(\"passuToken\")\r\n    try {\r\n        const res = await axios.get(apiUrl, {\r\n            headers: {\r\n                Authorization: 'bearer ' + token\r\n            }\r\n        });\r\n        return res.data;\r\n    } catch (e) {\r\n        console.log('Virhe, ' + e.message);\r\n        return null;\r\n    }\r\n}\r\nexport default gamesList;","import { useState, useEffect } from \"react\"\r\nimport gamesList from \"../services/gamesList\";\r\n\r\nconst useGetGames = () => {\r\n\r\n    const [games, setGames] = useState(null)\r\n    useEffect(() => {\r\n        ( async function () {\r\n            setGames( await gamesList());\r\n        })();\r\n    }, [])\r\n\r\n    return games;\r\n}\r\nexport default useGetGames;","import {\r\n    Container, Typography, TextField,\r\n    CircularProgress, Backdrop,\r\n    Card, CardHeader, CardContent,\r\n    Table, TableHead, TableCell, TableBody, TableRow, TableContainer, Collapse, Button, Switch\r\n} from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\nimport useGetGames from \"../hooks/useGetGames\"\r\nimport { ArgumentAxis, Chart, Legend, LineSeries, SplineSeries, ValueAxis } from \"@devexpress/dx-react-chart-material-ui\"\r\nimport { Animation } from \"@devexpress/dx-react-chart\"\r\n\r\nconst GameList = () => {\r\n\r\n    const [filter, setFilter] = useState('')\r\n\r\n    const games = useGetGames();\r\n    if (games === null || !games) return (<Backdrop open={true}><CircularProgress /></Backdrop>)\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\" gutterBottom>Kilpailut</Typography>\r\n            <TextField variant=\"outlined\" size=\"small\" value={filter} placeholder=\"Suodata radan nimellä\" margin=\"normal\" onChange={(e) => setFilter(e.target.value)} />\r\n            {games.filter(fg => fg.course.name.toLowerCase().includes(filter.toLowerCase())).reverse().map(g => <SingleGame game={g} key={g.course.name + g.date} />)}\r\n        </Container>\r\n    )\r\n}\r\nconst SingleGame = ({ game }) => {\r\n\r\n    const [showChart, setShowChart] = useState(false)\r\n    const [showProgress, setShowProgress] = useState(false)\r\n\r\n    const rataOtsikot = () => game.players[0].score.reduce((p, c, i) => {\r\n        return (c !== \"\") ? [...p, <TableCell>{i + 1}</TableCell>] : p;\r\n    }, []);\r\n  \r\n    return (\r\n        <Card style={{ marginBottom: 10 }}>\r\n            <CardHeader\r\n                title={game.course.name}\r\n                subheader={<>       \r\n                {game.course.layout}<br />\r\n                <span style={{ fontSize: '0.7em'}}>{game.date}</span>\r\n                </>}\r\n                action={<Button onClick={() => setShowChart(!showChart)}>Viivoja</Button>}\r\n            />\r\n            <CardContent>\r\n                Näytä tuloskehitys: <Switch checked={showProgress} onChange={() => setShowProgress(!showProgress)} />\r\n                <TableContainer>\r\n                    <Table size=\"small\" padding=\"none\" className=\"peliTaulu\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Pelaaja</TableCell>\r\n                                {rataOtsikot()}\r\n                                <TableCell>Total</TableCell>\r\n                                <TableCell>+/-</TableCell>\r\n                                <TableCell>HC +/-</TableCell>\r\n                                <TableCell>HC rank</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {game.players.sort((a,b) => a.rankHC-b.rankHC).map(p => <SinglePlayer \r\n                                key={game.date + p.name} \r\n                                player={p} \r\n                                rataPar={game.course.pars} \r\n                                showProgress={showProgress} \r\n                            />)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n            </CardContent>\r\n            <Collapse in={showChart} unmountOnExit={true}>\r\n                <Chart data={createChartData(game, showProgress)} style={{ maxHeight: 350 }}>\r\n                    { game.players.map(p => <SplineSeries argumentField=\"Rata\" valueField={p.name} name={p.name} />)}\r\n                    <ArgumentAxis />\r\n                    <ValueAxis/>\r\n                    <Legend position=\"right\" />\r\n                    <Animation />\r\n                </Chart>\r\n            </Collapse>\r\n        </Card>\r\n    )\r\n}\r\nconst SinglePlayer = ({ player, rataPar, showProgress }) => {\r\n\r\n    const tulosVari = (tulos, vayla) => {\r\n        switch (tulos - (+rataPar[vayla])) {\r\n            case 0:\r\n                return '#dfefdf'\r\n            case -1:\r\n                return '#82b7ff'\r\n            case -2:\r\n                return '#f5e942'\r\n            case 1:\r\n                return '#ffe382'\r\n            default:\r\n                return '#f5a182'\r\n        }\r\n    }\r\n    let summa = 0;\r\n    return (\r\n        <TableRow>\r\n            <TableCell>\r\n                {player.name}\r\n            </TableCell>\r\n            {player.score.map((s, i) => {\r\n                summa += s - (+rataPar[i]);\r\n                if (s !== '') return <TableCell\r\n                    style={{ backgroundColor: tulosVari(s, i) }}\r\n                >{(showProgress) ? summa : s}\r\n                </TableCell>\r\n                else return null;\r\n            })}\r\n            <TableCell>{player.total}</TableCell>\r\n            <TableCell>{player.plusminus}</TableCell>\r\n            <TableCell>{( player.plusminus - player.HC)}</TableCell>\r\n            <TableCell>{player.rankHC}</TableCell>            \r\n        </TableRow>\r\n    )\r\n}\r\nconst createChartData = (game, showProgress) => {\r\n    const chartData = game.players.reduce((p, c) => {\r\n        let summa=0\r\n        const player = c.score.reduce((pp, cc, ii) => {\r\n            if (cc === '') return pp;\r\n            summa += cc-game.course.pars[ii];\r\n            const tulos = (showProgress) \r\n                ? summa\r\n                : cc;\r\n            //console.log(tulos);\r\n            return [...pp, { Rata: (ii+1), [c.name]: Number(tulos) }]\r\n        }, [])\r\n        return [...p, ...player];\r\n    }, [])\r\n    return chartData;\r\n}\r\nexport default GameList","import { Animation } from \"@devexpress/dx-react-chart\"\r\nimport { Chart, ArgumentAxis, ValueAxis, SplineSeries } from \"@devexpress/dx-react-chart-material-ui\"\r\nimport { Paper } from \"@material-ui/core\"\r\n\r\n\r\nconst LineChart = ({ data }) => {\r\n\r\n    return (\r\n        <Paper>\r\n            <Chart\r\n                style={{ maxHeight: 250 }}\r\n                data={data}\r\n            >\r\n                <SplineSeries valueField=\"value\" argumentField=\"index\" />\r\n                <ArgumentAxis />\r\n                <ValueAxis />\r\n                <Animation />\r\n            </Chart>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import { Animation, ArgumentScale, Stack } from \"@devexpress/dx-react-chart\"\r\nimport { Chart, ArgumentAxis, ValueAxis, BarSeries, Title, Legend } from \"@devexpress/dx-react-chart-material-ui\"\r\nimport { scaleBand } from '@devexpress/dx-chart-core';\r\nimport { Paper } from \"@material-ui/core\"\r\n\r\n\r\nconst BarChart = ({ data }) => {\r\n    return (\r\n        <Paper>\r\n            <Chart data={data} style={{ maxHeight: 250 }}>\r\n                <ArgumentScale factory={scaleBand} />\r\n                <ArgumentAxis />\r\n                <ValueAxis />\r\n                <Legend />\r\n                <Title \r\n                    text=\"Ratadata\"\r\n                />\r\n                <BarSeries\r\n                    argumentField=\"nimi\"\r\n                    valueField=\"keskiarvo\"\r\n                    name=\"Keskiarvo\"\r\n                />\r\n                <BarSeries\r\n                    argumentField=\"nimi\"\r\n                    valueField=\"mediaani\"\r\n                    name=\"Mediaani\"\r\n                />\r\n                <Animation />\r\n                <Stack />\r\n            </Chart>\r\n        </Paper>\r\n    )\r\n}\r\nexport default BarChart;","import axios from 'axios';\r\n\r\nconst apiUrl = (process.env.NODE_ENV !== \"production\") \r\n    ? \"http://localhost:3001/api/hc\"\r\n    : \"/api/hc\";\r\n\r\nconst handicapList = async () => {\r\n    const token = window.localStorage.getItem(\"passuToken\")\r\n    try {\r\n        const res = await axios.get(apiUrl, {\r\n            headers: {\r\n                Authorization: 'bearer ' + token\r\n            }\r\n        });\r\n        return res.data;\r\n    } catch (e) {\r\n        console.log('Virhe, ' + e.message);\r\n        return null;\r\n    }\r\n}\r\nexport default handicapList;","import { useEffect, useState } from \"react\";\r\nimport handicapList from \"../services/handicapList\";\r\n\r\nconst useGetHcList = () => {\r\n    const [hcList, setHcList] = useState(null);\r\n    useEffect(() => {\r\n        ( async function() {\r\n            setHcList( await handicapList());\r\n        })();\r\n    }, [])\r\n    return hcList;\r\n}\r\nexport default useGetHcList;","import { CardContent, CardHeader, Container, Typography, Card, Paper, TableContainer, Table, TableRow, TableCell,\r\n    TableHead, TableBody, Backdrop, CircularProgress, Collapse, IconButton, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport TextField from \"./TextField\";\r\nimport LineChart from \"./LineChart\";\r\nimport BarChart from \"./BarCharts\";\r\nimport { InsertChartOutlined } from \"@material-ui/icons\";\r\nimport useGetHcList from \"../hooks/useGetHcList\";\r\n\r\n\r\nconst HandicapList = () => {\r\n\r\n    const hcList = useGetHcList();\r\n    const [filter, setFilter] = useState('')\r\n\r\n       if (hcList === null) return (<Backdrop open={true}><CircularProgress /></Backdrop>);\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h3\">Handicapit</Typography>\r\n            <TextField placeholder=\"Etsi rata\" value={filter} onChange={(e) => setFilter(e.target.value)} size=\"small\" />\r\n            {hcList.filter(r => r.course.name.includes(filter))\r\n                .map(i => <Rata key={i.course.name + i.course.layout} rata={i} />)}\r\n        </Container>\r\n    )\r\n}\r\nconst Rata = ({ rata }) => {\r\n    const [rataAuki, setRataAuki] = useState(false);\r\n    return (\r\n        <Card component={Paper} elevation={3} style={{ marginBottom: 10 }}>\r\n            <CardHeader\r\n                title={rata.course.name}\r\n                subheader={rata.course.layout}\r\n                action={<IconButton onClick={() => setRataAuki(!rataAuki)}><InsertChartOutlined /></IconButton>}\r\n            />\r\n            <CardContent>\r\n                <TableContainer>\r\n                    <Table size=\"small\" className=\"taulu\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Nimi</TableCell>\r\n                                <TableCell>HC</TableCell>\r\n                                <TableCell>Pelit</TableCell>\r\n                                <TableCell>Keskiarvo</TableCell>\r\n                                <TableCell>Mediaani</TableCell>\r\n                                <TableCell>Viim. 10 kierrosta</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rata.players.sort((a, b) => b.games - a.games)\r\n                                .map(p => <Pelaaja key={p.name + rata.course.name + rata.course.layout} pelaaja={p} />)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Collapse in={rataAuki} unmountOnExit={true}>\r\n                    <BarChart data={rata.players.map(p => {\r\n                        return {\r\n                            nimi: p.name,\r\n                            keskiarvo: p.average,\r\n                            mediaani: p.median,\r\n                            hc: p.hc\r\n                        }\r\n                    })} />\r\n                    <Button onClick={() => setRataAuki(false)}>Sulje...</Button>\r\n                </Collapse>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\nconst Pelaaja = ({ pelaaja }) => {\r\n    const { name, games, average, median, lastRounds, hc } = pelaaja;\r\n    const [pelaajaAuki, setPelaajaAuki] = useState(false);\r\n    return (\r\n        <>\r\n            <TableRow onClick={() => setPelaajaAuki(!pelaajaAuki)}>\r\n                <TableCell><b>{name}</b></TableCell>\r\n                <TableCell>{hc}</TableCell>\r\n                <TableCell>{games}</TableCell>\r\n                <TableCell>{Math.round(average * 100) / 100}</TableCell>\r\n                <TableCell>{median}</TableCell>\r\n                <TableCell>{JSON.stringify(lastRounds.slice(0,10)).slice(1, -1).replace(/[,]/g, ', ')}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0, border: 0 }} colSpan={6}>\r\n                    <Collapse in={pelaajaAuki} unmountOnExit>\r\n                        <LineChart data={lastRounds.slice().reverse().map((v,i) => {\r\n                            return { index: i, value: v }\r\n                        } )} />\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </>\r\n    )\r\n}\r\nexport default HandicapList;\r\n","import { Backdrop, CircularProgress, Container, Divider, MenuItem, Select, Typography } from \"@material-ui/core\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { useEffect, useState } from \"react\";\r\nimport useGetGames from \"../hooks/useGetGames\";\r\n\r\nconst pisteet = [0,5,4,3,2,1,0,0,0,0,0,0,0,0,0]\r\n\r\nconst Kilpataulukko = () => {\r\n\r\n    const [pelaajaRivit, setPelaajaRivit] = useState([]);\r\n    const [dataToShow, setDataToShow] = useState('rank');\r\n\r\n    const pelit = useGetGames();\r\n    useEffect(() => {\r\n        if (pelit !== null) {\r\n            const pelaajat = [];\r\n            for (const peli of pelit) {\r\n                for (const pelaaja of peli.players) {\r\n                    let pelaajaObj = pelaajat.find(x => x.name === pelaaja.name);\r\n                    if (pelaajaObj === null || !pelaajaObj) { pelaajaObj = { name: pelaaja.name, points: 0, id: pelaaja.name }; pelaajat.push(pelaajaObj); }\r\n                    pelaaja.points = pisteet[pelaaja.rankHC];\r\n                    pelaajaObj.points += pelaaja.points;\r\n                    pelaajaObj[peli._id] = pelaaja;\r\n                }\r\n            }\r\n            console.log(pelaajat);\r\n            setPelaajaRivit(pelaajat);\r\n        }\r\n    }, [pelit]);\r\n    if (pelit === null) return (<Backdrop open={true}><CircularProgress /></Backdrop>)\r\n    const columns = pelit.map((p, i) => {\r\n        return {\r\n            headerName: (i + 1),\r\n            field: p._id,\r\n            width: 73,\r\n            description: `${p.course.name} / ${p.course.layout} (${p.date})`\r\n        }\r\n    })\r\n    columns.unshift({ headerName: 'Pelaaja', field: 'name', width: 100 })\r\n    columns.push( { headerName: 'Points total', field: 'points', width: 100 })\r\n    \r\n    let rows = pelaajaRivit.map(r => {\r\n        const copyR = {...r}\r\n        Object.keys(copyR).map(key => {\r\n            if (typeof copyR[key] === \"object\")\r\n                copyR[key] = copyR[key][dataToShow];\r\n            return copyR[key]\r\n        })\r\n        return copyR;\r\n    });\r\n    console.log(rows);\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\">Kisataulukko</Typography>\r\n            Näytä data: <Select\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={(value) => {\r\n                    console.log(value.target.value);\r\n                    setDataToShow(value.target.value)\r\n                }}\r\n                value={dataToShow}\r\n            >\r\n                <MenuItem value=\"rank\">Rank</MenuItem>\r\n                <MenuItem value=\"rankHC\">RankHC</MenuItem>\r\n                <MenuItem value=\"total\">Total</MenuItem>\r\n                <MenuItem value=\"totalHC\">TotalHC</MenuItem>\r\n                <MenuItem value=\"plusminus\">Plusminus</MenuItem>\r\n                <MenuItem value=\"HC\">Handicap</MenuItem>\r\n                <MenuItem value=\"points\">Points</MenuItem>\r\n            </Select>\r\n            <Divider style={{marginBottom: 15, marginTop: 15}} />\r\n                <DataGrid\r\n                    className=\"datataulu\"\r\n                    disableColumnMenu={true}\r\n                    autoHeight={true}\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    pageSize={15}\r\n                />\r\n        </Container>\r\n    )\r\n}\r\nexport default Kilpataulukko;","import { Button } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport useStyles from \"../hooks/useStyles\";\r\n\r\nconst NaviNappi = ({ to, children }) => {\r\n    const historia = useHistory();\r\n    const tyylit = useStyles();\r\n    return (\r\n        <Button \r\n            onClick={ () => historia.push(to) } \r\n            style={tyylit.navButton}\r\n        >{children}</Button>\r\n    )\r\n}\r\nexport default NaviNappi","import { AppBar, Fade, IconButton, Slide, Toolbar } from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport NaviNappi from \"./NaviNappi\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst Navipalkki = () => {\r\n\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const openMenu = () => {\r\n        setShowMenu(true);\r\n        setTimeout(() => {\r\n            setShowMenu(false);\r\n\r\n        }, 8000)\r\n    }\r\n    return (\r\n        <>\r\n            <div style={{ position: 'fixed' }}>\r\n            <Slide in={!showMenu} direction=\"down\">\r\n            <IconButton onClick={openMenu}>\r\n                <MenuIcon style={{ transform: 'scale(1.5)'}}/>\r\n            </IconButton>\r\n            </Slide>\r\n            </div>\r\n            <Slide in={showMenu} direction=\"right\" timeout={1500}>\r\n\r\n            <AppBar position=\"sticky\" style={{ backgroundColor: '#efefef', opacity: 0.9}}>\r\n                    <Toolbar style={{ flex: 0, flexDirection: 'row', justifyContent: 'space-between' }} componen=\"span\">\r\n                        <NaviNappi to=\"/\">Etusivu</NaviNappi>\r\n                        <NaviNappi to=\"/points\">Kisataulu</NaviNappi>\r\n                        <NaviNappi to=\"/games\">Pelit</NaviNappi>\r\n                        <NaviNappi to=\"/hc\">HC</NaviNappi>\r\n                        <NaviNappi to=\"/upload\">Lähetä .csv</NaviNappi>\r\n                    </Toolbar>\r\n            </AppBar>\r\n            </Slide>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Navipalkki;","import { Backdrop, Button, CircularProgress, Container, Typography, Paper } from \"@material-ui/core\"\r\nimport axios from \"axios\"\r\nimport { useState } from \"react\"\r\nimport TextField from \"./TextField\"\r\n\r\nconst UploadCsv = () => {\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n    const [uploadResponse, setUploadResponse] = useState(null);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData()\r\n        data.append('filu', e.target.filu.files[0])\r\n        const token = window.localStorage.getItem('passuToken')\r\n        setUploading(true);\r\n        axios.post((process.env.NODE_ENV !== 'production' ?\r\n            'http://localhost:3001/upload' :\r\n            'https://risbeegomfkerho.herokuapp.com/upload'\r\n        ), data, {\r\n            headers: { Authorization: 'bearer ' + token }\r\n        }).then(res => {\r\n            console.log(res.data)\r\n            setUploadResponse(res.data);\r\n        }).catch(e => {\r\n            console.log('Error', e)\r\n        }).finally(() => {\r\n            setUploading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Backdrop open={uploading}>\r\n                <CircularProgress />\r\n            </Backdrop>\r\n            {(uploadResponse !== null && <UploadStats stats={uploadResponse} />)}\r\n            <Typography variant=\"h4\" gutterBottom>Lähetä .csv</Typography>\r\n            <Typography paragraph>\r\n                Lähetä Udiscin .csv tiedosto\r\n            </Typography>\r\n            <form onSubmit={onSubmit}>\r\n                <TextField type=\"file\" name=\"filu\" /><br />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Lähetä</Button>\r\n            </form>\r\n        </Container>\r\n\r\n    )\r\n}\r\nconst UploadStats = ({ stats }) => {\r\n\r\n    return (\r\n        <Paper style={{ padding: 10, marginBottom: 10 }} elevation={3}>\r\n            <Typography variant=\"h4\">Pelejä lisätty: <b>{stats.uusia}</b></Typography>\r\n            <Typography variant=\"h5\">Duplikaatteja: <b>{stats.duplikaatteja}</b></Typography>\r\n\r\n            <Typography variant=\"h5\">Hylätyt tuloskortit</Typography>\r\n            <ul>\r\n                <li>Väärä päivä: {stats.wrongDate} kpl</li>\r\n                <li>Väärä nimi: {stats.wrongName.count} kpl</li>\r\n                <ul>\r\n                    {stats.wrongName.names.map(name => <li key={name}>{name}</li>)}\r\n                </ul>\r\n            </ul>\r\n        </Paper>\r\n    )\r\n}\r\nexport default UploadCsv","import { useEffect, useState } from \"react\";\r\n\r\nconst useIsLggedIn = () => {\r\n    const [logged, setLogged] = useState(false);\r\n\r\n    const clearToken = () => {\r\n        window.localStorage.clear();\r\n        setLogged(false);\r\n    }\r\n    const setToken = (token) => {\r\n        window.localStorage.setItem('passuToken', token);\r\n        setLogged(true);\r\n    }\r\n\r\n    useEffect( () => {\r\n        const token = window.localStorage.getItem('passuToken');\r\n        if (token !== null) setLogged(true);\r\n    }, [])\r\n    return { logged, setToken, clearToken }\r\n}   \r\nexport default useIsLggedIn;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport FrontPage from \"./components/FrontPage\";\nimport GameList from \"./components/GameList\";\nimport HandicapList from \"./components/HandicapList\";\nimport Kilpataulukko from \"./components/Kilpataulukko\";\nimport Navipalkki from \"./components/Navipalkki\";\nimport UploadCsv from \"./components/UploadCsv\";\nimport useIsLggedIn from \"./hooks/useIsLoggedIn\";\n\nconst App = () => {\n\n  const logged = useIsLggedIn();\n\n  return (\n    <BrowserRouter>\n\n      {(logged.logged && <Navipalkki />)}\n      <Switch>\n        <Route path=\"/games\">\n          <GameList />\n        </Route>\n        <Route path=\"/points\">\n          <Kilpataulukko />\n        </Route>\n        <Route path=\"/hc\">\n          <HandicapList />\n        </Route>\n        <Route path=\"/upload\">\n          <UploadCsv />\n        </Route>\n        <Route path=\"/\">\n          <FrontPage logged={logged} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}